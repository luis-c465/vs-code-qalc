{
    "scopeName": "source.qalc",
    "patterns": [
        {
            "include": "#expression"
        }
    ],
    "repository": {
        "expression": {
            "patterns": [
                {
                    "include": "#keywords"
                },
                {
                    "include": "#constants"
                },
                {
                    "include": "#variableAssignment"
                },
                {
                    "include": "#function"
                },
                {
                    "include": "#comment"
                },
                {
                    "include": "#header"
                },
                {
                    "include": "#symbols"
                },
                {
                    "include": "#symbolsOnlyNotAfterANumber"
                },
                {
                    "include": "#symbolsOnlyNotBeforeANumber"
                },
                {
                    "include": "#symbolsNotInScientificNotation"
                },
                {
                    "include": "#binary"
                },
                {
                    "include": "#octal"
                },
                {
                    "include": "#hex"
                }
                
            ]
        },
        "keywords" :{
            "match": "\\b(in|to|last|off|of|mod|xor|or|ago)\\b",
            "captures": {
                "1": {
                    "name": "entity.name.type"
                }
            }
        },
        "constants" :{
            "match": "\\b(today|tomorrow|now|time|yesterday|pi|e|sum|total|average|avg|Infinity|NaN)\\b",
            "captures": {
                "1": {
                    "name": "variable"
                }
            }
        },
        "variableAssignment": {
            "match": "^\\s*(\\w+)(?=\\s*\\=)",
            "captures": {
                "1": {
                    "name": "constant.numeric"
                }
            }
        },
        "function": {
            "begin": "(\\w+)(\\()",
            "end": "(\\))",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.function"
                },
                "2": {
                    "name": "punctuation"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "punctuation"
                }
            },
            "patterns": [
                {
                    "include": "#expression"
                }
            ]
        },
        "comment": {
            "match": "//.*$",
            "name": "comment"
        },
        "header": {
            "match": "^\\s*#.*$",
            "name": "string"
        },
        "symbols": {
            "match": "[\\+\\/\\*\\|\\^\\&\\>\\<\\(\\)\\[\\]\\!\\=\\'\\\"\\:\\?]",
            "name": "punctuation"
        },
        "symbolsOnlyNotAfterANumber": {
            "match": "(?<!\\d)[\\%]",
            "name": "punctuation"
        },
        "symbolsOnlyNotBeforeANumber": {
            "match": "[\\,\\.](?!\\d)",
            "name": "punctuation"
        },
        "symbolsNotInScientificNotation": {
            "match": "(?<!\\de)\\-",
            "name": "punctuation"
        },
        "binary": {
            "match": "(?<=\\b)0b(?=[01])",
            "name": "punctuation"
        },
        "octal": {
            "match": "(?<=\\b)0o(?=[0-7])",
            "name": "punctuation"
        },
        "hex": {
            "match": "(?<=\\b)0x(?=[0-9a-fA-F])",
            "name": "punctuation"
        }
    }
}